@model DashboardViewModel
@using System.Text.Json;

@{
    ViewData["Title"] = "Bảng điều khiển Quản lý";
    // Chuyển đổi dữ liệu biểu đồ sang JSON để JavaScript có thể đọc
    var chartLabels = JsonSerializer.Serialize(Model.Last30DaysRevenueChartData.Select(d => d.Date));
    var chartData = JsonSerializer.Serialize(Model.Last30DaysRevenueChartData.Select(d => d.Revenue));
}

<div class="container py-5">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="text-center section-title mb-5">@ViewData["Title"]</h1>
        </div>
    </div>

    <div class="row g-4">
        <div class="col-lg-3 col-md-6"><div class="card text-white bg-success shadow-lg h-100"><div class="card-body d-flex justify-content-between align-items-center"><div><h5 class="card-title text-white-75 mb-0">DOANH THU HÔM NAY</h5><h2 class="card-text fw-bold">@Model.RevenueToday.ToString("N0") VNĐ</h2></div><i class="fas fa-dollar-sign fa-3x opacity-50"></i></div></div></div>
        <div class="col-lg-3 col-md-6"><div class="card text-white bg-primary shadow-lg h-100"><div class="card-body d-flex justify-content-between align-items-center"><div><h5 class="card-title text-white-75 mb-0">DOANH THU 7 NGÀY</h5><h2 class="card-text fw-bold">@Model.RevenueLast30Days.ToString("N0") VNĐ</h2></div><i class="fas fa-chart-line fa-3x opacity-50"></i></div></div></div>
        <div class="col-lg-3 col-md-6"><div class="card text-white bg-info shadow-lg h-100"><div class="card-body d-flex justify-content-between align-items-center"><div><h5 class="card-title text-white-75 mb-0">ĐƠN HÀNG MỚI</h5><h2 class="card-text fw-bold">@Model.NewOrdersToday</h2></div><i class="fas fa-shopping-bag fa-3x opacity-50"></i></div></div></div>
        <div class="col-lg-3 col-md-6"><div class="card text-dark bg-warning shadow-lg h-100"><div class="card-body d-flex justify-content-between align-items-center"><div><h5 class="card-title text-dark-75 mb-0">ĐƠN HÀNG CẦN XỬ LÝ</h5><h2 class="card-text fw-bold">@Model.PendingOrders</h2></div><i class="fas fa-hourglass-half fa-3x opacity-50"></i></div></div></div>
    </div>

    <div class="row mt-5 g-4">
        <div class="col-lg-8">
            <div class="card shadow-lg p-4 h-100">
                <div class="card-body">
                    <h4 class="card-title mb-4"><i class="fas fa-chart-line me-2"></i>Doanh thu 7 ngày gần nhất</h4>
                    
                    @* ===== SỬA LỖI Ở ĐÂY ===== *@
                    @* Bọc canvas trong một div để kiểm soát chiều cao cố định *@
                    <div style="position: relative; height: 350px;">
                         <canvas id="revenueChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
             <div class="card shadow-lg p-4 h-100">
                <div class="card-body">
                    <h4 class="card-title mb-4"><i class="fas fa-star me-2"></i>Top 5 Món bán chạy (7 ngày)</h4>
                    @if (Model.TopSellingFoodItems != null && Model.TopSellingFoodItems.Any())
                    {
                        <ul class="list-group list-group-flush">
                            @foreach (var item in Model.TopSellingFoodItems)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <span class="fw-bold">@item.FoodName</span>
                                    <span class="badge bg-primary rounded-pill">@item.TotalQuantitySold Lượt</span>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <div class="alert alert-info text-center" role="alert">Chưa có dữ liệu.</div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const labels = @Html.Raw(chartLabels);
            const data = @Html.Raw(chartData);

            const ctx = document.getElementById('revenueChart').getContext('2d');
            
            const revenueChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Doanh thu (VNĐ)',
                        data: data,
                        backgroundColor: 'rgba(21, 115, 71, 0.2)',
                        borderColor: 'rgba(21, 115, 71, 1)',
                        borderWidth: 2,
                        fill: true,
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: { y: { beginAtZero: true, ticks: { callback: function(value) { return value.toLocaleString('vi-VN') + ' VNĐ'; } } } },
                    plugins: {
                        legend: { display: false },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return 'Doanh thu: ' + context.parsed.y.toLocaleString('vi-VN') + ' VNĐ';
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
}